version: '3.8'

services:
  app:
    build: .
    container_name: spurring-app
    ports:
      - "8081:3000"  # Use port 8081 to avoid conflicts
    environment:
      - NODE_ENV=production
    env_file:
      - .env
    restart: unless-stopped
    depends_on:
      - db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - spurring-network

  db:
    image: postgres:15-alpine
    container_name: spurring-db
    environment:
      - POSTGRES_DB=spurring
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=spurring123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - spurring-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d spurring"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:

networks:
  spurring-network:
    driver: bridge
